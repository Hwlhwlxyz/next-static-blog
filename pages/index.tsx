import { getAllPosts, getAllTags } from "../lib/api/posts";
import PostType from "../lib/models/post";

import React, { ReactElement } from "react";
import Layout from "../components/layout/layout";
import { LayoutSidebar } from "../components/layout/sidebar";
import Head from "next/head";
import BlogHead from "../components/blogHead";
import MainPage from "../components/mainpage";
import { Pagination } from "../components/pagination";
import styles from "../styles/Home.module.css";
import blogConfig from "../blogConfig.json";

type Props = {
  postsToDisplay: PostType[];
  tags: string[];
  pagenumber: number;
  totalnumber: number;
};

const Index = ({ postsToDisplay, tags, pagenumber, totalnumber  }: Props) => {
  let totalPageNumber = Math.ceil(totalnumber / blogConfig.postPerPage);
  

  return (
    <div className={styles.container}>
      <Head>
        <title>next static blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <BlogHead />
        <MainPage allPosts={postsToDisplay} />
      </main>

      <Pagination className={styles.pagination} selectedClassName={styles.selected} pageNumber={pagenumber} totalPageNumber={totalPageNumber} hrefPrefix={null} pageRangeDisplayed={undefined} />

      <footer className={styles.footer}>

        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <img src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

Index.getLayout = function getLayout(page: ReactElement) {
  console.log(page);
  let tags = page.props.tags;
  return (
    <Layout>
      <LayoutSidebar tags={tags} />
      {page}
    </Layout>
  );
};

export default Index;

function getPostToDisplay(allPosts: PostType[], pageNumber: number) {
  const postsToDisplay = allPosts.splice(
    (pageNumber - 1) * blogConfig.postPerPage,
    Math.min(pageNumber * blogConfig.postPerPage, allPosts.length)
  );
  return postsToDisplay;
}

export async function getStaticProps() {
  const pageNumber = 1;
  const pagenumber = pageNumber;
  let allPosts: any = null;
  allPosts = getAllPosts(["title", "date", "slug", "coverImage", "excerpt"]);
  console.log(allPosts);
  const totalnumber = allPosts.length;
  const postsToDisplay = getPostToDisplay(allPosts, pagenumber);
  const tags = getAllTags();
  return {
    props: { postsToDisplay, tags, pagenumber, totalnumber },
  };
}